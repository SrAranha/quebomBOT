"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var http = require("http");
var https = require("https");
/**
 * An abstraction of a WebHook connection adapter.
 */
var ConnectionAdapter = /** @class */ (function () {
    /**
     * Creates a new instance of the connection adapter.
     *
     * @expandParams
     *
     * @param options
     */
    function ConnectionAdapter(options) {
        this._listenerPort = options.listenerPort;
        this._ssl = options.sslCert;
    }
    /**
     * Creates the HTTP server to use for listening to events.
     *
     * @protected
     */
    ConnectionAdapter.prototype.createHttpServer = function () {
        if (this._ssl) {
            return https.createServer({
                key: this._ssl.key,
                cert: this._ssl.cert
            });
        }
        return http.createServer();
    };
    Object.defineProperty(ConnectionAdapter.prototype, "listenUsingSsl", {
        /**
         * Whether the connection adapter listens using SSL.
         *
         * @protected
         */
        get: function () {
            return !!this._ssl;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * The port the HTTP server should listen on.
     *
     * @protected
     */
    ConnectionAdapter.prototype.getListenerPort = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this._listenerPort];
            });
        });
    };
    Object.defineProperty(ConnectionAdapter.prototype, "pathPrefix", {
        /**
         * The path prefix an external connection needs to reach this server.
         *
         * Please not that the layer redirecting to this server needs to strip the path prefix in order for this to work.
         *
         * For example, if this is set to /hooks, an external connection to /hooks/abc should pass /abc as the path to this server.
         *
         * @protected
         */
        get: function () {
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        shared_utils_1.NonEnumerable
    ], ConnectionAdapter.prototype, "_ssl", void 0);
    return ConnectionAdapter;
}());
exports.default = ConnectionAdapter;
module.exports = exports = ConnectionAdapter;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ConnectionAdapter;
