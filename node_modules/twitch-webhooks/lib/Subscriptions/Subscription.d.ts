import { HelixWebHookHubRequestOptions } from 'twitch/lib/API/Helix/WebHooks/HelixWebHooksAPI';
import WebHookListener from '../WebHookListener';
/**
 * @hideProtected
 */
export default abstract class Subscription</** @private */ T = any> {
    protected _handler: (obj: T) => void;
    protected _client: WebHookListener;
    private _validityInSeconds;
    private _verified;
    protected _secret: string;
    private _refreshTimer?;
    /** @private */
    constructor(_handler: (obj: T) => void, _client: WebHookListener, _validityInSeconds?: number);
    /**
     * Whether the subscription has been verified by Twitch.
     */
    get verified(): boolean;
    /** @private */
    _verify(): void;
    /** @private */
    _generateNewCredentials(): void;
    /** @private */
    _handleData(data: string, algoAndSignature: string): boolean;
    /**
     * Activates the subscription.
     */
    start(): Promise<void>;
    /**
     * Suspends the subscription, not removing it from the listener.
     */
    suspend(): Promise<void>;
    /**
     * Deactivates the subscription and removes it from the listener.
     */
    stop(): Promise<void>;
    protected _getOptions(): Promise<HelixWebHookHubRequestOptions>;
    /** @private */
    abstract get id(): string;
    protected abstract _subscribe(): Promise<void>;
    protected abstract _unsubscribe(): Promise<void>;
    protected abstract transformData(response: object): T;
    private _createNewSubscription;
}
