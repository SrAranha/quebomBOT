"use strict";
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var LogLevel_1 = require("./LogLevel");
var BaseLogger_1 = require("./BaseLogger");
var __export_LogLevelToEmoji = (_a = {},
    _a[LogLevel_1.default.CRITICAL] = "\uD83D\uDED1",
    _a[LogLevel_1.default.ERROR] = "\u274C",
    // these following two need extra spaces at the end because somehow they consume less space in a terminal than they should...
    _a[LogLevel_1.default.WARNING] = "\u26A0\uFE0F ",
    _a[LogLevel_1.default.INFO] = "\u2139\uFE0F ",
    _a[LogLevel_1.default.DEBUG] = "\uD83D\uDC1E",
    _a[LogLevel_1.default.TRACE] = "\uD83D\uDC3E",
    _a);
exports.LogLevelToEmoji = __export_LogLevelToEmoji;
var colors = {
    black: 30,
    red: 31,
    green: 32,
    yellow: 33,
    blue: 34,
    magenta: 35,
    cyan: 36,
    white: 37,
    blackBright: 90,
    redBright: 91,
    greenBright: 92,
    yellowBright: 93,
    blueBright: 94,
    magentaBright: 95,
    cyanBright: 96,
    whiteBright: 97
};
var bgColors = {
    bgBlack: 40,
    bgRed: 41,
    bgGreen: 42,
    bgYellow: 43,
    bgBlue: 44,
    bgMagenta: 45,
    bgCyan: 46,
    bgWhite: 47,
    bgBlackBright: 100,
    bgRedBright: 101,
    bgGreenBright: 102,
    bgYellowBright: 103,
    bgBlueBright: 104,
    bgMagentaBright: 105,
    bgCyanBright: 106,
    bgWhiteBright: 107
};
function createGenericWrapper(color, ending, inner) {
    return function (str) { return "\u001B[" + color + "m" + (inner ? inner(str) : str) + "\u001B[" + ending + "m"; };
}
function createColorWrapper(color) {
    return createGenericWrapper(colors[color], 39);
}
function createBgWrapper(color, fgWrapper) {
    return createGenericWrapper(bgColors[color], 49, fgWrapper);
}
var __export_LogLevelToColor = (_b = {},
    _b[LogLevel_1.default.CRITICAL] = createColorWrapper('red'),
    _b[LogLevel_1.default.ERROR] = createColorWrapper('redBright'),
    _b[LogLevel_1.default.WARNING] = createColorWrapper('yellow'),
    _b[LogLevel_1.default.INFO] = createColorWrapper('blue'),
    _b[LogLevel_1.default.DEBUG] = createColorWrapper('magenta'),
    _b[LogLevel_1.default.TRACE] = createGenericWrapper(0, 0),
    _b);
exports.LogLevelToColor = __export_LogLevelToColor;
var __export_LogLevelToBackgroundColor = (_c = {},
    _c[LogLevel_1.default.CRITICAL] = createBgWrapper('bgRed', createColorWrapper('white')),
    _c[LogLevel_1.default.ERROR] = createBgWrapper('bgRedBright', createColorWrapper('white')),
    _c[LogLevel_1.default.WARNING] = createBgWrapper('bgYellow', createColorWrapper('black')),
    _c[LogLevel_1.default.INFO] = createBgWrapper('bgBlue', createColorWrapper('white')),
    _c[LogLevel_1.default.DEBUG] = createBgWrapper('bgMagenta', createColorWrapper('black')),
    _c[LogLevel_1.default.TRACE] = createGenericWrapper(7, 27),
    _c);
exports.LogLevelToBackgroundColor = __export_LogLevelToBackgroundColor;
var NodeLogger = /** @class */ (function (_super) {
    tslib_1.__extends(NodeLogger, _super);
    function NodeLogger() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NodeLogger.prototype.log = function (level, message) {
        if (level > this._minLevel) {
            return;
        }
        var logFn = LogLevel_1.LogLevelToConsoleFunction[level];
        var builtMessage = '';
        if (this._timestamps) {
            builtMessage += "[" + new Date().toISOString() + "] ";
        }
        if (this._emoji) {
            var emoji = exports.LogLevelToEmoji[level];
            builtMessage += emoji + " ";
        }
        if (this._colors) {
            builtMessage += exports.LogLevelToBackgroundColor[level](this._name) + " " + exports.LogLevelToBackgroundColor[level](LogLevel_1.default[level]) + " " + exports.LogLevelToColor[level](message);
        }
        else {
            builtMessage += "[" + this._name + ":" + LogLevel_1.default[level].toLowerCase() + "] " + message;
        }
        logFn(builtMessage);
    };
    return NodeLogger;
}(BaseLogger_1.default));
exports.default = NodeLogger;
module.exports = exports = NodeLogger;
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogLevelToEmoji = __export_LogLevelToEmoji;
exports.LogLevelToColor = __export_LogLevelToColor;
exports.LogLevelToBackgroundColor = __export_LogLevelToBackgroundColor;
exports.default = NodeLogger;
//# sourceMappingURL=NodeLogger.js.map